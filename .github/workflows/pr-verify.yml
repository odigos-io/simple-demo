name: Verify Docker Builds

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  verify-docker-builds:
    strategy:
      matrix:
        include:
          - service: coupon
          - service: currency
          - service: frontend
          - service: geolocation
          - service: inventory
          - service: membership
          - service: pricing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build Docker Image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          push: false
          load: true
          platforms: linux/amd64
          file: ${{ matrix.service }}/Dockerfile
          context: ${{ matrix.service }}
          tags: odigos-demo-${{ matrix.service }}:pr-test

      - name: Verify image was created
        run: |
          docker images | grep odigos-demo-${{ matrix.service }}
          echo "âœ… Successfully built ${{ matrix.service }} Docker image"

  verify-linux-builds:
    strategy:
      matrix:
        include:
          - service: coupon
            arch: amd64
            pkg_arch: all
          - service: currency
            arch: amd64
            pkg_arch: all
          - service: frontend
            arch: amd64
            pkg_arch: all
          - service: geolocation
            arch: amd64
            pkg_arch: all
          - service: inventory
            arch: amd64
            pkg_arch: all
          - service: pricing
            arch: amd64
            pkg_arch: amd64
          - service: pricing
            arch: arm64
            pkg_arch: arm64
    runs-on:
      labels: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install nfpm
        run: go install github.com/goreleaser/nfpm/v2/cmd/nfpm@latest

      - name: Build
        working-directory: ${{ matrix.service }}
        run: |
          docker buildx build --load --platform=linux/${{ matrix.arch }} -t ${{ matrix.service }} .
          docker create --name tc ${{ matrix.service }}
          mkdir -p ./dist
          sh ./distribution/copy-assets.sh
          docker rm tc
          sed -i -E 's/version: .*$/version: '"${TAG}"'/' nfpm.yaml
          sed -i -E 's/arch: .*$/arch: '"${{ matrix.pkg_arch }}"'/' nfpm.yaml
          nfpm pkg --packager rpm --target dist/
          nfpm pkg --packager deb --target dist/

      - name: List dist
        working-directory: ${{ matrix.service }}
        run: |
          echo "Local dir"
          ls -la .

          echo "dist/"
          ls -la dist/

  membership-linux-builds:
    runs-on:
      labels: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set env
        id: vars
        run: |
          SHORT_COMMIT=$(git rev-parse --short HEAD)
          echo "short_commit=${SHORT_COMMIT}" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Release Membership Linux Package
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          workdir: membership

      - name: List dist
        working-directory: membership
        run: |
          echo "Local dir"
          ls -la .

          echo "dist/"
          ls -la dist/
